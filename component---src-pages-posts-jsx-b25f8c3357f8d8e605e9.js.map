{"version":3,"sources":["webpack:///./src/pages/posts.jsx","webpack:///./src/components/header.jsx","webpack:///./src/components/layout.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["pageQuery","BlogIndex","posts","data","allMdx","edges","id","map","post","node","key","to","fields","slug","frontmatter","title","excerpt","NavLink","children","className","setHtmlAttributes","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"8FAAA,kGAuBaA,EAAS,aAyBPC,UA5CG,SAAC,GAAc,IAChBC,EADe,EAAXC,KACWC,OAAtBC,MAER,OACE,kBAAC,IAAD,CAAQC,GAAG,OACT,8CACA,6BACCJ,EAAMK,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,6BAASC,IAAKF,EAAKF,IACjB,kBAAC,IAAD,CAAMK,GAAIH,EAAKI,OAAOC,MACpB,4BAAKL,EAAKM,YAAYC,QAExB,2BAAIP,EAAKQ,gB,uECbbC,EAAU,SAAC,GAAD,IAAEN,EAAF,EAAEA,GAAIO,EAAN,EAAMA,SAAN,OACd,kBAAC,IAAD,CAAMC,UAAU,6EAA6ER,GAAIA,GAC9FO,IAIU,oBACb,4BAAQC,UAAU,+BAChB,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAASR,GAAG,KAAZ,QACA,kBAAC,EAAD,CAASA,GAAG,SAAZ,QACA,kBAAC,EAAD,CAASA,GAAG,UAAZ,SACA,kBAAC,EAAD,CAASA,GAAG,UAAZ,Y,UCXS,oBAAGO,EAAH,EAAGA,SAA6BZ,GAAhC,EAAac,kBAAb,EAAgCd,IAAhC,OACb,yBAAKa,UAAU,0DACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,0BACb,0BAAMb,GAAIA,EAAIa,UAAU,2BACrBD,O,kCCTT,sGAcyBG,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,geCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,I,+VAApB,EACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-posts-jsx-b25f8c3357f8d8e605e9.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout.jsx\";\n\nconst BlogIndex = ({ data }) => {\n  const { edges: posts } = data.allMdx;\n\n  return (\n    <Layout id=\"mdx\">\n      <h1>The bluhbluh's</h1>\n      <hr/>\n      {posts.map(({ node: post }) => (\n        <article key={post.id}>\n          <Link to={post.fields.slug}>\n            <h2>{post.frontmatter.title}</h2>\n          </Link>\n          <p>{post.excerpt}</p>\n        </article>\n      ))}\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\nquery postIndex {\n  allMdx(\n    sort: {\n      fields: [frontmatter___date]\n      order: DESC\n    }\n  ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogIndex;\n","import React from \"react\";\nimport {Link} from \"gatsby\";\n\nconst NavLink = ({to, children}) => (\n  <Link className=\"no-underline text-teal-dark uppercase tracking-wide font-bold text-xl mr-8\" to={to}>\n    {children}\n  </Link>\n);\n\nexport default () => (\n  <header className=\"main-container mx-auto my-5\">\n    <nav className=\"flex justify-end\">\n      <NavLink to=\"/\">Home</NavLink>\n      <NavLink to=\"/tags\">Tags</NavLink>\n      <NavLink to=\"/posts\">Blogs</NavLink>\n      <NavLink to=\"/about\">About</NavLink>\n    </nav>\n  </header>\n)\n","import React from \"react\";\nimport Header from \"./header\";\nimport \"../css/global.css\";\n\nexport default ({ children, setHtmlAttributes, id }) => (\n  <div className=\"antialiased leading-tight min-h-screen w-full bg-white\">\n    <Header/>\n    <div className=\"main-container mx-auto\">\n      <main id={id} className=\"mt-4 md:mt-0 mx-2 mb-24\">\n        {children}\n      </main>\n    </div>\n  </div>\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}