{"version":3,"sources":["webpack:///./posts/posts/2014-10-17-issue-driven-development.markdown"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","border","cellSpacing","cellPadding","rules","frame","className","scope","isMDXComponent"],"mappings":"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","file":"component---posts-posts-2014-10-17-issue-driven-development-markdown-fb2952c8cbda77430da4.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cccc-im/cccc-im/src/components/posts-layout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`ISSUE`}</h1>\n    <p>{`这个是最重要的地方\nissue主要包含什么.\n尽可能不从host floor上面删除东西, 如果是逻辑改变, 那么要使用`}<del parentName=\"p\">{`!!`}</del>{` 中划线语法进行删除, 这样可以让人一目了然.\n`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`typo fix`}</code>{` 或者 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`text decoration`}</code>{`, 才可以直接修改.`}</p>\n    <h2>{`kanban`}</h2>\n    <p>{`用了github很久发现其实github issue可以帮助我们解决很多问题，但是也会带来很多问题，比如其中一个就很重要。我们如何确定开发进展, 并不是每一次我们都能很清晰的在大脑进行一次拓扑排序的.\n那么这时候我们就需要借助kanban工具, 上面我有提到kanban这种东西我是推荐使用trello, 功能少, 刚刚好.\n其实只要多一个工具就等于加大了一次复杂程度, 所以需要从流程上去简化他, 那么这时候就很简单了,\n流程是这样: 由 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`PM`}</code>{` 建立kanban, 然后由 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`repo leader`}</code>{` 确定 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`dev`}</code>{`, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`dev`}</code>{` 开发完毕后由 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`repo leader`}</code>{` 来merge `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`pull request`}</code>{`, 最后由 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`QA`}</code>{` 将kanban移动到 完成栏.`}</p>\n    <h3>{`所以我们的整个业务逻辑按照抽象等级就分成了三层`}</h3>\n    <table border=\"2\" cellSpacing=\"0\" cellPadding=\"6\" rules=\"groups\" frame=\"hsides\">\n      <colgroup>\n        <col className=\"left\" />\n      </colgroup>\n      <thead>\n        <tr>\n          <th scope=\"col\" className=\"left\">level</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td className=\"left\">kanban</td>\n        </tr>\n        <tr>\n          <td className=\"left\">issue</td>\n        </tr>\n        <tr>\n          <td className=\"left\">code commits</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`details`}</h2>\n    <h3><code parentName=\"h3\" {...{\n        \"className\": \"language-text\"\n      }}>{`commit`}</code>{` your code`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`小步提交，并且尽可能的在任何commit中refer相关的 `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`issue`}</code>{`, 在有所改变的时候尽可能的comment in issue.`}</li>\n      <li parentName=\"ol\">{`如果 `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`commit`}</code>{` 超过3次，还没有refer任何issue，那么这时候你就要小心了。很可能你做的已经开始超出控制了.`}</li>\n      <li parentName=\"ol\">{`commit要按逻辑提交, 并在log里面解释容易混淆的逻辑.`}</li>\n    </ol>\n    <h2>{`Big Changes`}</h2>\n    <p>{`当遇到项目级别的大型重构时候, 则需要进行1-2天的调整, 那么这时候就需要 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`repo leader`}</code>{` 提前一周确定好改变方案, 然后选定一天进行 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`refacotr`}</code>{`. 而 =dev=们则需要做好准备进行修修补补了.`}</p>\n    <h2>{`benefits`}</h2>\n    <h3>{`code is document, issue is the structure.`}</h3>\n    <p>{`我们都经历过太多只有代码, 没有文档的痛苦. 就好比扔给你你一大堆线团, 然后告诉你这其实是一个毛衣, 你不能搞乱其他花纹的基础上, 再织一个花纹上去.\n很幸运的是, 如果你严格采用IDD的话, 那么doc一般对于新手而言并不是什么困难的问题, 一个新程序员从 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`kanban`}</code>{` 开始就有一个大体的开发过程, 然后对应到issue里面, 很容易就可以把握清楚功能点和细节.`}</p>\n    <h3>{`overview`}</h3>\n    <p>{`程序员比较容易失去大局观, 而产品经理很难控制开发的进度, 那么kanban和issue结合就很容易估计项目的复杂程度, 软件复杂程度估计本来就是一个比较复杂和困难的任务.\n这时候就需要 `}<strong parentName=\"p\">{`repo leader`}</strong>{` 去估计项目和issue的粒度了.`}</p>\n    <h2>{`keep host floor up-to-date.`}</h2>\n    <p>{`可能突然会有一个更好的主意, 突然发现昨天的功夫都白费了. ok! 很好, 这太正常不过了, 我们并不能保证我们每天都按照正确的方向走, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`PM`}</code>{` 不能, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`BD`}</code>{` 不能, 更不要提对着机器的 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`dev`}</code>{` 了.\n对, 那么一定要comment 在下面, 然后 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`repo floor`}</code>{` 一定要保持是最新并且最好就是一眼就能看出来想做什么, 做了什么.`}</p>\n    <h2>{`overview`}</h2>\n    <h1>{`从开发的角度来看:`}</h1>\n    <p><code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`issue`}</code>{` 大概可以分成三类：`}</p>\n    <h3>{`enhancement`}</h3>\n    <p>{`这个种类比较多。\n比如不那么显式的feature，或者是一个暴露bug的测试, 或者是refactor。这都算是enhancement流程比较类似，但是不太一样。\n如果开发发现一个好的enhancement, 如果比较小, 那么可以直接顺手提交一个commit 并且在log中表明是enhancement.\n如果开发发现一个比较大的enhancement, 那么需要打开一个issue, 由=repo leader=去决定排期和开发计划.`}</p>\n    <h3>{`bug`}</h3>\n    <p>{`比较规范的流程是：\n1.  首先用户或者PM发现了一个bug，推送给相关PM\n2.  PM确认bug后，按照bug issue规范，发起一个 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`kanban`}</code>{`. 然后 `}<strong parentName=\"p\">{`repo leader`}</strong>{` `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`issue`}</code>{` with `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`bug`}</code>{` tag ， `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`assign`}</code>{` 给 `}<strong parentName=\"p\">{`repo leader`}</strong>{`\n3.  `}<strong parentName=\"p\">{`repo leader`}</strong>{` 确认并comment描述细节, update issue host floor assign to `}<strong parentName=\"p\">{`dev`}</strong>{`.\n4.  `}<strong parentName=\"p\">{`dev`}</strong>{` 分析具体细节并建立todo或者拆分issue, 描述开发思路和过程. 即时comment, 并即时refer issue.`}</p>\n    <h3>{`feature`}</h3>\n    <p>{`比较规范的流程是：\n1.  首先PM酝酿并在kanban提出需求，跟 `}<strong parentName=\"p\">{`repo leader`}</strong>{` 讨论.\n2.  由 `}<strong parentName=\"p\">{`repo leader`}</strong>{` 发起 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`issue`}</code>{` with `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`feature`}</code>{` tag 并关联到 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`kanban`}</code>{` 上面.\n3.  `}<strong parentName=\"p\">{`dev`}</strong>{` 分析具体细节并建立todo或者拆分issue, 描述开发思路和过程. 即时comment, 并即时refer issue.\n4.  开发完毕后, `}<strong parentName=\"p\">{`dev`}</strong>{` 发起 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`pull request`}</code>{`.\n5.  `}<strong parentName=\"p\">{`repo leader`}</strong>{` merge `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`pull request`}</code>{`, 然后 `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`assign`}</code>{` 给 `}<strong parentName=\"p\">{`QA`}</strong>{`\n6.  `}<strong parentName=\"p\">{`QA`}</strong>{` 确定没有问题后, 移动kanban到=完成=.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}