{"componentChunkName":"component---src-components-posts-page-layout-jsx","path":"/posts/2014-07-03-life-of-viewcontroller/","result":{"data":{"mdx":{"id":"8437a5b4-282f-5568-a3bc-5a4a1abfc1d6","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"date\": \"2014-07-03T05:52:26.000Z\",\n  \"tags\": [\"objective c\", \"ios\", \"novice\"],\n  \"title\": \"Life of viewcontroller\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"life of view controllers\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"//i.stack.imgur.com/eYCHy.jpg\",\n    \"alt\": \"img\",\n    \"title\": \"life of controllers\"\n  }))), mdx(\"h2\", null, \"life of view controller\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"init: ViewController loaded, no interface element (IBOutlet) available yet (all nil)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"viewDidLoad: the nib/storyboard has been loaded and all objects are available. The user sees nothing yet\\nnot sure of the Geometry of the Device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"viewWillAppear: the view is about to be displayed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"viewDidAppear: the view is on screen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"viewWillDisappear: the view is about to go away\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"viewDidDisappear: the view just was taken off the window\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"viewDidUnload: NEVER CALLED in iOS6/7\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"didReceiveMemoryWarning: You don\\u2019t know if, when and how often this is called. Prior to iOS6 it might unload the view, after iOS6 it just purges an offscreen cache or does nothing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dealloc: the viewController is about to get destroyed\")), mdx(\"h2\", null, \"usage of view controller\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"viewDidLoad:\\nAdd Observers for non-view things.\\nOverride this method to perform additional initialization on views that were loaded from nib files.\\nCalled when you create the class and load from xib.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"viewWillAppear:\\nAdjust Geometry of the Device\\nadd Observers for UI effects.\\ngood for hiding/showing fields or any operations that you want to happen every time before the view is visible\\nCalled after the view appears - great place to start an animations or the loading of external data from an API.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"viewDidAppear:\\nstart an animations or the loading of external data from an API.\\nAdd observers for external data UI effects.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"viewWillDisappear:\\nremove observers for UI effects\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"viewDidDisappear:\\nremove observers for external data UI effects\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"dealloc\\nremove Observers for non-view things.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Life of viewcontroller","date":"2014-07-03T05:52:26.000Z"}}},"pageContext":{"id":"8437a5b4-282f-5568-a3bc-5a4a1abfc1d6","next":{"id":"20816b4e-54af-53b9-af2e-79c3fe324b4f","frontmatter":{"title":"Quote post","date":"2014-07-02T10:10:51.000Z"},"fields":{"slug":"/posts/2014-07-02-quote-post/"}},"previous":{"id":"88742336-8f3e-58ca-ad74-0baf63b90f46","frontmatter":{"title":"Switch back to AFNetworking 2.0","date":"2014-07-05T07:29:40.000Z"},"fields":{"slug":"/posts/2014-07-05-switch-back-to-afnetworking-20/"}}}}}