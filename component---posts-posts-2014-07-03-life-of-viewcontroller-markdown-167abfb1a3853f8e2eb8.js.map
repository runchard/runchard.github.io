{"version":3,"sources":["webpack:///./posts/posts/2014-07-03-life-of-viewcontroller.markdown"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kDACA,qBAAG,iCAAKC,WAAW,KAAQ,CACvB,IAAO,gCACP,IAAO,MACP,MAAS,0BAEb,iDACA,sBACE,kBAAIA,WAAW,MAAf,wFACA,kBAAIA,WAAW,MAAf,oJAEA,kBAAIA,WAAW,MAAf,qDACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,mDACA,kBAAIA,WAAW,MAAf,4DACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,uLACA,kBAAIA,WAAW,MAAf,0DAEF,kDACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+MAKF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mTAMF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kIAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wDAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qEAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qDAQRJ,EAAWK,gBAAiB","file":"component---posts-posts-2014-07-03-life-of-viewcontroller-markdown-167abfb1a3853f8e2eb8.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/cccc-im/cccc-im/src/components/posts-layout.jsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`life of view controllers`}</h1>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"//i.stack.imgur.com/eYCHy.jpg\",\n        \"alt\": \"img\",\n        \"title\": \"life of controllers\"\n      }}></img></p>\n    <h2>{`life of view controller`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`init: ViewController loaded, no interface element (IBOutlet) available yet (all nil)`}</li>\n      <li parentName=\"ul\">{`viewDidLoad: the nib/storyboard has been loaded and all objects are available. The user sees nothing yet\nnot sure of the Geometry of the Device`}</li>\n      <li parentName=\"ul\">{`viewWillAppear: the view is about to be displayed`}</li>\n      <li parentName=\"ul\">{`viewDidAppear: the view is on screen`}</li>\n      <li parentName=\"ul\">{`viewWillDisappear: the view is about to go away`}</li>\n      <li parentName=\"ul\">{`viewDidDisappear: the view just was taken off the window`}</li>\n      <li parentName=\"ul\">{`viewDidUnload: NEVER CALLED in iOS6/7`}</li>\n      <li parentName=\"ul\">{`didReceiveMemoryWarning: You donâ€™t know if, when and how often this is called. Prior to iOS6 it might unload the view, after iOS6 it just purges an offscreen cache or does nothing`}</li>\n      <li parentName=\"ul\">{`dealloc: the viewController is about to get destroyed`}</li>\n    </ul>\n    <h2>{`usage of view controller`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`viewDidLoad:\nAdd Observers for non-view things.\nOverride this method to perform additional initialization on views that were loaded from nib files.\nCalled when you create the class and load from xib.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`viewWillAppear:\nAdjust Geometry of the Device\nadd Observers for UI effects.\ngood for hiding/showing fields or any operations that you want to happen every time before the view is visible\nCalled after the view appears - great place to start an animations or the loading of external data from an API.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`viewDidAppear:\nstart an animations or the loading of external data from an API.\nAdd observers for external data UI effects.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`viewWillDisappear:\nremove observers for UI effects`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`viewDidDisappear:\nremove observers for external data UI effects`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`dealloc\nremove Observers for non-view things.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}