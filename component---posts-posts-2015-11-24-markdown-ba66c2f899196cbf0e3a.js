(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{vfzi:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return c})),t.d(a,"default",(function(){return l}));t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("91GP"),t("q1tI");var n=t("7ljp"),s=t("7xGc");var c={},b={_frontmatter:c},p=s.a;function l(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,n,s={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,["components"]);return Object(n.b)(p,Object.assign({},b,t,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h1",null,"背景"),Object(n.b)("p",null,Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"ES6")," 增加了关键字\n",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"class"),", ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"const"),", ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"export"),", ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"extends"),", ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"import"),", ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"let"),", ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"super"),", ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"yield"),"."),Object(n.b)("p",null,"增加更现代的函数式编程特点, 也引入了更OO的模式, 当然同时增大了语言复杂度. (但事实上降低了",Object(n.b)("strong",{parentName:"p"},"全栈"),"的复杂度)\n可以明确感知到一股rust, scala风徐徐吹来."),Object(n.b)("p",null,"最近则又学了一段时间的 Angular 2 和其官方所推崇的 ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"TypeScript"),", 感觉内心真是崩溃沮丧无力吐槽.\n号称",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"typescript"),"是为了解决 Type 问题设计的. 然而他居然是",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"javascript"),"的superset."),Object(n.b)("p",null,"M$真是创建奇妙符号和语法的好手. 自从给C++系统扩充CLI之后, 就可以明白哪怕语言在复杂, 我们依然可以让他更复杂."),Object(n.b)("p",null,"在引入了",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"interface"),"之类的标记之后, 如果你坚持用 ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"TypeScript"),", 那么 ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"Angular")," 可以从外表上最MVC的lib变成",Object(n.b)("strong",{parentName:"p"},"java"),"."),Object(n.b)("p",null,"早年 js 的设计不过是早产, 但依然是往前推进, 而现在看起来像是走了前进的道路, 不如说退步了."),Object(n.b)("p",null,"我的编程的生涯告诉我, 所谓技术到底由什么带领?\n-- 是由各路 ",Object(n.b)("strong",{parentName:"p"},"Lead")," 的喜好."),Object(n.b)("p",null,"本来就是技术散文, 如果硬要结论的话"),Object(n.b)("div",{className:"gatsby-highlight","data-language":"text"},Object(n.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-text line-numbers"}),Object(n.b)("code",Object.assign({parentName:"pre"},{className:"language-text"})," *如果非要做技术投资的话, 我觉着 ES6 可以保本.*"),Object(n.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(n.b)("span",{parentName:"span"})))))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---posts-posts-2015-11-24-markdown-ba66c2f899196cbf0e3a.js.map